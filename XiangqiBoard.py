from tkinter import *
from XiangqiGame import Pieces, XiangqiGame
#   Use canvas to create a board

class ChessBoard:
    def __init__(self):
        self.game=XiangqiGame()
        self.ID_board = [[None for _ in range(9)] for _ in range(10)]
        self.main = Tk()
        delta = 40
        board_length = 600
        board_height = 675
        self.square_size = board_length // 8
        self.chess_board = Canvas(self.main, width=board_length+delta, height=board_height+delta+self.square_size, bg='white')

        #dark_color = '#b58863'      # hex code for bfilenish color
        #light_color = '#f0d9b4'     # hex code for tannish color
        select_color = '#dac352'
        # piece images, look into converting to base64 encoded strings
        # assign images to label or something to prevent garbage collection
        # piece = chess_board.create_image(x,y, anchor = tk.NW)

        self.white_soldier = PhotoImage(data='R0lGODlhMwAzAIcAAQD/AJVhAJ1pCJ1xFKFtDKVxFKp1GK55GLJ9ELJ9HLaBGLqBGL6JHLaBIL6JKL6NML6RNMaRHMqRHMKJIMKNKMKRJMKRKMqRIMqRKM6ZJMqZKMKRMMaVOMKZMMadPMqRMMqVOMqZONKZJNKZKNKVMNKZOM6hMMqhONqhLNKhMNaqPNqhMNqqOOKlPOKqNMaZQMqdQNKdQMqhQMqhSM6lUMqhXcqqWdKhQNKhSNKqQNKqSNqhQNqlSNqqSNKlUNKqUNKuWdquUNquXd6yQNqySNayXdqyUNqyWd66WcqqYdqyYdq2ad66Ydq6ada6edq6ceKqQOKqSOKuUOKyROKySOKyUOKyWea6UOK6Weq6Veq6WeK2YeK2beK6Yeq+Yeq+aeK6ceK+efK+Yd7CddrCeerCXebCaerCYerCaeLCceLCeebKferCeerKcerKefLGZfLCafLKZfLKafLCcfLGffLKcfLKefrKdfbSefrSed7CgeLCgebKgebKierCgerGierKgerKke7SherSierSke7Sme7anfLKgfLKifrOgfLOkfLSgfbajfrSgfrSifLSmfLakfLamfrWkfrWmfrake7eoe7eqvLWofLaofLaqvraofreqvresvrimfLiofLiqv/iofriqvbisvrisvrqtsqZMMqZNMqdMMqdNM6ZMM6ZNM6dMM6dNOK6aeK6beK+aeK+bea6aea6bea+aea+berCcerCderGcerGde7Cce7Cde7Gce7GderKierKjerOierOje7Kie7Kje7Oie7OjfLSifLSjfLWifLWjfbSifbSjfbWifbWjfLSkfLSlfLWkfLWlfbSkfbSlfbWkfbWlframfranfremfrenf/amf/anf/emf/endKZMNKZNNKdMNKdNNaZMNadMNadNNKhONKhPNKlPNahONahPNalONalPNqhONqhPNqlONqlPN6hON6hPN6lPNqqQNqqRNquQNquRN6qQN6qRN6uRLqJJLqNJL6JJL6NIL6NJAAAAAAAACH5BAEAAAAALAAAAAAzADMABwj+AAEIHEiwoEF/CBMmNMiwocOGCiNKRPiwYsWJGCVa3DgQozRQoTI9ejQp2yGMHC8qxGIlCA5FmkIWwqQtGCA1XY7UiJiSYURcsMx0KQJEW0xMhR4527OITZcuKHsKVLhlC69a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')
        self.black_soldier = PhotoImage(data='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')
        self.white_chariot = PhotoImage(data='R0lGODlhMwAzAIcAAQD/AK6FKLKFML6NOLqROLqNRLaZQLqRQL6VSL6ZQL6ZSMKROMKZOMqZOMqhPNKlPMKVRMKVSMKZQMqZQMqdSMKZUMqdUNKdRMKhTMqhQMqqSMahUMahWcqlWc6qUMqqWdKhQNKhSNKqQNqqQNqqSNKlUNKlWdqqUNquWdKyTN6ySNayUNKyWd66Vd66WcquZc62adauYdquZdKyYdKyada6adqyYdq2adq6Ydq6ada+cda6edq2cdq6cdq+eeKySOKyUOKyWeK6WeK2YeK6aeq6Yeq+aeK6cdbCdd7Ccd7CferCXebCYeLCaerCZerCae7KaeLCeebKeerCeerKcerSffLGYfLGafbKZfLKbfLGcfLGefrKcfrOefLSefrSef/afeLCgeLKgeLKierGherKgerKiebOke7OkebSjerSge7Sie7ajerSkerWme7amfLKgfLSifLaifrSgfrWifragfraifLSkfLWnfLakfLamfrWlfrakframfbeofreof/iifbilfbinf/ikfrimf/qmfbiofbiqvriofriqv/qpf/qqv/msv/qsv/uuv/yusqhUMqhVcqlUMqlVc6hUM6hVc6lUM6lVeK6YeK6ZeK+YeK+Zea6Yea6Zea+Yea+ZfLKcfLKdfLOcfLOdfbKcfbKdfbOcfbOdcKZSMKZTMKdSMKdTMaZSMadSMadTMqhSMqhTMqlTM6hSM6hTM6lSM6lTNKqSNKqTNKuTNaqSNaqTNauSNauTNKqUNKqVdKuVdaqUNaqVdauUNauVdKqWdKqXdKuWdKuXdaqWdauWdauXdqyUNqyVdq2UNq2Vd6yUN6yVd62VdqyWdqyXdq2Wdq2Xd6yWd62Wd62XeLCceLCdeLGdebCcebCdebGcebGderCcerCderGcerGde7Cde7Gce7GderKeerKferOfe7Kee7Kfe7Oee7OffLKefLKffLOefLOffbKefbOefbOffLSgfLShfLWhfbSgfbShfbWgfbWhbaRQLaRRAAAAAAAACH5BAEAAAAALAAAAAAzADMABwj+AAEIHEiwoEF/CBMmNMiwocOGCiNKRPiwYsWJGCVa3DgQo5Bc0ECAmKALkiqMHC8qVJcj1RUhIYI0cJBBlwcPivLYqRcxJcOIUypMuVHBFDYJ12aSANJKgiJBhOSMG9fTp0CF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')
        self.black_chariot = PhotoImage(data='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')
        self.white_horse = PhotoImage(data='R0lGODlhMwAzAIcAAQD/AJ1pCKFtDKVxFKp1GLJ9FLJ9GLaBHL6JHK6BKLqJIL6NKLqJMLqNPL6RNMKJHMKJIMKNKMaNMMKRJMKRKMqRIMqRKMqZKMKRMMKROMaZMMqRMM6VOMqZMMqdONKZLNKVMNKZOM6hMMqhONKhMNKhONaqPNqhNNqhONqqPMaZQMaZTMqdQMqdSNKdQNKdTM6hQM6hSMqhVcqhWc6qUNKhQNKhSNaqQNKqSNqhQNqlSNqqQNKhUNKqUNaqWdqqUNquWd6yQNqySNayXdqyUNqyWd66Wcaubcqycda2ada6bdqyadq6ada6edq6cdq6eeKqQOKqSOauUOKyROKySOK6TOKyWeK6UOK6Weq6Veq6WeK2YeK2beK6Yeq+Yeq+aeK6ceK+efK+Yd7CferCXebCae7CYerCaeLCceLCeebKferCeerKcerKefLGZfLCbfLKZfLKafLCcfLGffLKcfLKef/Seda6gdq+gdbCjd7CgdrGid7KjdrGkd7KleLCgeLGiebKgeLKierCgerKgebKkeLKmerKkerOme7SherSiebSmerSkerSme7amfLOgfLKifLOkfLSgfLSifrWgfrSifLSkfLSmfLakfLamfrWkfrWmfrake7Woe7eoe7eqvLWofLaqvraofreqvresvbinf/imfLiofLiqvriofriqv/qof/qqvbisvrisvrqsv/uuv/ytv/yvv/uwv/ywtKZMNKZNNKdMNKdNNaZMNaZNNadMNadNOK6aeK6beK+aeK+bea6aea6bea+aea+berKierKjerOierOje7Kie7Kje7Oie7Ojframfranfremfrenf/amf/anf/emf/enfLaofLapfLeofLepfbaofbapfbeofbepdqqSNquSNquTN6qSN6qTN6uSN6uTNqyYdq2Ydq2Zd6yYd6yZd62Yd62ZeKyUOKyVeK2UOK2VeayUOayVea2UOrCcerCderGcerGde7Cce7Gce7GdbqBGLqBHL6BGL6FGL6FHAAAAAAAACH5BAEAAAAALAAAAAAzADMABwj+AAEIHEiwoEF/CBMmNMiwocOGCiNKRPiwYsWJGCVa3DgQI7M6Q2j4GDXKFSqMHC8qFHUJ0B9ldcj56CFKlatQ2wqlIRQxJcOIpkaJYuQyUh11RXqoErUIW04nhGTM6OlToEIW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')
        self.black_horse = PhotoImage(data='R0lGODlhMwAzAIcAAVUUBF0UBF0YAF0cDGkcCGkkBGkgCG0oDGEgEGkgEHEkCHksCHEgEHEkGHEoGHksEHkoGHUwAHEwCHkwBHkwCH04BHk4DHUwEHkwGHk4EH04GAD/AIEsFIE0CIE4BIk4CIEwEIk4EIk4GIE0IIE4IIk4IIVABIVADIVAEIVAGIlIEIlIGJFIDJFAEJFEGJlEGJlIEJFQEJFQGJlQEJlZFJlZGIlAII1IIJFEIJVIKJlMIJlMKJVQIJVQKJlZIJ1ZKKFQFKFQGKpdGKFVKKpZIKpdKKFZMKpdMKVhHKFhIKFhLKphIKppKKphMLJhJLZlKLZtJLZpKLptLLJpMLJpOLZxKLpxKLJxML5xMLpxQMJxMMJ9OIE4EIE4FIE8EIE8FIU4EIU4FIU8EIU8FIE4GIE4HIE8GIE8HIU4GIU4HIU8GIU8HIlAEIlAFIlEEIlEFI1AEI1AFI1EEI1EFIlAGIlAHIlEGIlEHI1AGI1AHI1EGI1EHJFIGJFIHJFMGJFMHJVIGJVIHJVMGJVMHJlQGJlQHJlVGJlVHJ1QGJ1QHJ1VGJ1VHJlQIJlQJJlVIJlVJJ1QIJ1QJJ1VIJ1VJHkwEHkwFHk0EHk0FH0wEH0wFH00EJFIEJFIFJFMFJVIEJVIFJVMEJVMFJFIIJFMIJFMJJVIIJVIJJVMIJVMJKFZIKFZJKFdIKVZIKVZJKVdIKVdJKphKKplKKplLK5hKK5hLK5lKK5lLGEYBGEcBGUYAGUYBGUcAGUcBGEYCGEcCGEcDGUYCGUcCGUcDHEoCHEoDHEsCHUoDHUsCHUsDIE4CIE4DIE8DIU4CIU8CIU8DIlADIlECIlEDI1ACI1ADI1EDJlIGJlIHJlMGJlMHJ1MGJ1MHKFZGKFZHKVZGKVZHKVdGKVdHKFQIKFQJKFVIKFVJKVVIKVVJKFZKKFZLKFdKKVZKKVdKKVdLHEoAHEsAHUoAHUsAHUsBHEsFHUoEHUoFHUsEHUsFIEwGIE0GIE0HIU0GIU0HHEkAHEkBAAAAAAAACH5BAEAABsALAAAAAAzADMABwj+ADcIHEiwoEF/CBMmNMiwocOGCiNKRPiwYsWJGCVa3DgQYzp1gOCwkcSJkweMHC8qVIHCB59zr2C0gNNIjwsxk9hAwhYxJcOIrGS4UfFjEDlWiOYw69MmjrNTYgQJQkSop0+BCmfUWCJIDgoUcYbAeuWmAidIfNi0MWIu3LqJVyWCqiGokB0LLnQQWqSCzQdVRtuhS9QiY8qESWJkXJyxKkWLCZkkTrioBSMdc47ZCOQiYapJcx4tw/ahhbpnnKKA27vwYcJoTF459ucEUItSeBbkgPQWoSQ+zgAxahKuWZEiQWotcbK6NUSE0a682pQwCCBsN8Pg4CPH8yA2zLL+zOS0jkiQVIS8eQvl/CDCKdKmTE84w5oLPX247FmBIqGMQBMQ8gobCSHVzXqEGGJIex0hRMgUhMwCyyL0udACHXRQsJ8eCfHhQhyepJKMQoh0Q8QmM4SSSjoMbpAQDUlIRc4kjNWYkHrqBRGEJAz6t8UVkhTCCYEIybACDzw4Ik4HHpCTkCCcYOPMIJwIcoISSayyBBEszAADK+ww0l5C21RhBSGh2ELNk5Ngg80g6jTjwWyM8MFHG3oQIkgLrLRyzSKLbEIIIq2ko4pzCVnxDRRWyGYLIgkVMoggdp7jjAcyJATIHIDgKYgk2SAyzjiJvOIBJ9ewso4qR7SWkBT+QiCxBDerTPhkCKVgMwdaghyKkAsu8IHCKIycMwgfMhzCQi2blFSXJLS4ilAUMyyxhCEz2BLLkx00UUQL333A4698BLKCBXC8JoMi3NQFiSqqCKKOtP48QYQWThBByBJBaAqGKajoAckHHhSR0ASDNAFPCCMm5AgisNS1iCSpLDLOQglhAUQQUQAREyxL2GgjIYrUtUkqr6QyTjgSTRGDDDXUIIMK8Cb0xg0ZfKWNDkwlFMg0gJwzRwh98OGIHzIAscReqUhSQxIpS+SBLCYYEosjJ4RCHUIrpJCCHStocx8FPrdg2QcuBHKOG24kjcUmixwigyFMjCXRCUxAUwP+LD4scwcpCd2Qwhd62MSZMgnpAQgfjLAxiB+qtPCGDA9et5cisBwnkQxM1GBIEuksI8ENCaGgBhdciPEOsJ0hFIKdg5wQbyuAyPAHCzBw8owcFROiDssRyWCsB4IIjcIKCdWRRx570BFWJK37M4czaTGighsgeXLNDKA4OMMMrphTjUQq+OFMBXLw4cfxCWGIxxhchKCDDtELwgg7bjDixx9uwhAENwoJBSiW8AJzSOQNfRADBfSwgj+EIHoii+AniuCCIUjkD20IwQSU8YY35CEMpVNDF7pQB1ydog9+GMQmSEWEN4WCEJyQhNk8kRBYhKIFrRiCBSmSkC7YQAT9IhgFCtpAJH/gAVh28ELbZoYNbYSjGo/4AUKqRAhCYAMQ2UiIJLDRKyc9JiEUQEMIwgC2PgxiDyAAgQgQcpdOJAshgDCHNnzwiEEk5BWhEMQn+oWQZxSCHKooBL3qUYk11IMLdEBI207QH4SIgQ8+mISY/EEFNuwFEoK4IyhiAIPqAEoGRKDXBQqADGRwARUIQZoPlDAvf7RBFbDrEJrGkUmELEErfPQHN0KhghqE8jEuQggy4sGFCaADIYuIgSx8kCmETOAUiShEM/1hjmtIpTD+eAU3AIgQIqQiFNe4GDCD6Q9KjEEUEaihIZQws4S0AR2veMW4EHINThQCEP0IEUQtVpGQJ6ApnD1CyCnQkYKEGGEF6NCDGMDYg0jwrA8JaYEH+NCCcvBhEJ+opT+IsIhQKGacWEGIKMCQEE7QwQJ9mMNCEXIMTTijD8lgQysyig1GCKIIMDgWJ/CJkCCwgBAzaBE5FSKMBPjiAPIgBgYQ8gASlKEMGrDBSxmXiqpe44l8KFAQQkEhkBIkIr/ohVEFIAADVKISGHjAPIhRjwtcQhmDONZiZsEK9nj1qwgZAAB4EQwG6MIXvjCAAxyQgAQ4oB7EyIAE6LCHLuTBDnR4g0S48QpFTFMl/kBAMAzAAAb0whe3wMUtbhEAB1SiHpYoxhjqoIYwuMMO1394wzxnUAtPzGYjCTHFDoAoghIo4AEPMEBRO4tYDZDhAmfIBAi6III/rKAFLoABHoX6HISIAAT6AEE+SjCCeQCjAfSAAAYqMYy2miEN/eDHAnjgBguxQiFxSYgC6MEAY2TiAQrYBQZAkIm0EsMearBBHY4BAky4YBCA4OldIaMQAhgDH/fIhAHqsQB8YGAeBigDCBawYRFgYg4Q9MdVChIREOyDAyBAAxmMgd955AJ1dNAEGtYI3xG7RyJoSANwgasAOuAAJTaubgSpG2S8RrDI8YVLkAPyADs=')
        self.white_elephant = PhotoImage(data='R0lGODlhMwAzAIcAAQD/AMaZOM6dPM6hPNKlPMaZQMqdQMqdSMalVcqhUM6lWcqqVcqqWdKhQNKqUNquVdquXdKyWdqyUMqqYc6yYdKuZdKyada6bdq2adq6Ydq2cd6+eeK2TOKyVea2YeK6Yeq+ZeK+ceK+ed7Cbd7CcdrCeeLCaerGYerCaeLKcebKeerGeerKcfLGdfLKcfLKefLSeeLCgebKgebOierGgerKierOkebSie7She7SierSme7aleramfLKgfLOifrOgfLOlfLaifrSgfrSif/ahfLSmfLakfrWke7Woe7aoe7ervLWofLeqvraofreqv/ikf/qne7iofLiofbiqv/qofrqqvLisv/isv/qsurKgerKherOgerOhe7Kge7Khe7Oge7OhfLSifLSjfLWifLWjfbSifbSjfbWifbWjfrakfralfrekfrelf/akf/alf/ekf/eldqyYdqyZdq2Ydq2Zd6yZd62Yd62Zdq6cdq+cdq+dd66cd66dd6+cd6+deK6aeK6beK+aeK+bea6aea+aea+beLCceLCdeLGdebCcebCdebGcebGdeLCeeLGeeLGfebCeebCfebGeebGferCcerCderGcerGde7Cce7Gce7GderKeerKferOfe7Kee7Kfe7Oee7OferSkerSlerWke7Ske7Sle7Wke7WlfLSgfLShfLWhfbSgfbShfbWgfbWhfLamfLanfLemfbamfbanfbemfbenframfranfremfrenf/amf/emf/enfLaofLapfLeofLepfbapfbeofbepfriofrmofrmpf/iof/ipf/mof/mpdKqWdKqXdKuWdKuXdauWdauXdqyWdqyXdq2Xd6yWd62Wd62XdKyYdKyZdayYdayZda2Yda2Zdq6adq6bdq+bd66ad66bd6+afraifrejf/aif/ajf/eif/ejfLSkfLSlfLWkfLWlfbWkfbWlfrimfrinf/imf/inf/mmf/mnfrirvrmrv/iqv/irv/mqv/mrsqhTM6hSAAAAAAAACH5BAEAAAAALAAAAAAzADMABwj+AAEIHEiwoEF/CBMmNMiwocOGCiNKRPiwYsWJGCVa3DgQIys6FdoEY4KshhyMHC8qFMOrmC5zgLKlCTYl2a1mQmLUaBIxJcOIWyioyzWMhxBxFow4cYLs5rkSpZBccdLTp0CM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')
        self.black_elephant = PhotoImage(data='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')
        self.white_cannon = PhotoImage(data='R0lGODlhMwAzAIcAAQD/AL6NMMaRLMKRNMaZPMqVMMKZRMqZQMqdSMqhRMauWc6lUMquXcqyXdKlSNKqTNqqTNKlUNaqUNauWdquUN62SNayUNqyUNqyWdq6Wc6uZdayYdK2ada6YdK6adq2Ydq2adq6YdK2cda6cda6edq6eeK2UOK2XeK6UOK6Weq+WeKyYeK6YeK6aea+cdrCbdbCedrCcdrCee7CXeLCYebKberCYerCaerKaeLKceLKeerCcerGeebSferSefLKbfLKcfLKefLScfbaffrWff/afdrCgdrCid7KgdrKieLGgeLGjeLKierKieLKkerOlebSje7SgerSieLWnerSme7anfLOgfLagfLaif/WhfrWifragfLWnfLamfrWkfrakframeraofLWofLaofreof/ihfriif/qjfbilfbimfrikfrimf/qlf/qmfbiofLiqvriqv/qofrqqvbqsv/msvrqsv/uuv/ypf/ytv/yuuLCceLCdeLGceLGdebCcebCdebGcebGderKcerKderOcerOde7Kce7Kde7Oce7OderKeerKferOeerOfe7Kee7Kfe7Oee7OffLSefLSffLWefLWffbSefbSffbWefbWffraifrajfreifrejf/aif/ajf/eif/ejdKyWdKyXdK2WdayWdayXda2Wda2Xdq6adq6bdq+adq+bd66ad6+ad6+bdq6cdq6ddq+cdq+dd66cd6+cd6+deLCaeLCbeLGbebCaebCbebGaebGbeLKgeLKheLOgebKgebKhebOgebOherKgerOgerOhe7Kge7Khe7Oge7OherSkerWkerWle7Ske7Sle7Wke7Wlfriofripfrmpf/iof/ipf/mof/mpcqhSMqhTM6hSM6hTM6lSM6lTOLCeeLCfeLGeeLGfebGeebGffLSgfLWgfLWhfbSgfbWgfbWhfLSifLWifLWjfbSifbWifbWjfLSkfLSlfLWkfLWlfbWkfbWlfLakfLalfLelfbakfbalfbelQAAAAAAACH5BAEAAAAALAAAAAAzADMABwj+AAEIHEiwoEF/CBMmNMiwocOGCiNKRPiwYsWJGCVa3DgQY4YMV3wcatHKVSSMHC8qrFRICA4aIK8AaQFoh7lX6NTwipiSYUQmXdA1olSDha5N8CiRqnQlyI1MW260AMKzp0CF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')
        self.black_cannon = PhotoImage(data='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')
        self.white_general = PhotoImage(data='R0lGODlhMwAzAIcAAQD/ALqZSL6lXc6ZJM6dKM6hKM6lMNKhLNKlMNaqNNquNNqqOM6hRMalUMalXcKqXcqlVc6uUMqqWdaqRNqqQNqqSNKuUNKuWdquUNqyQNqySNKyWdqyVcaqYcquYcayac6yZcqyadKuZdauadKyYda6bdqyYdqyadK2cdK6cda+edq2cdq+eeKuTOKyROKySOK6SOK2UOK2Wea6UOK6Weq6Ve6+WeK2ZeK2aeK+aeq+Yeq+aeK+cea+ed7CcdrCefLCXeLCaerCZerCae7KbebKdeLKeerCcerGeerKce7SffLKcfLKefLSefrSfd7CgeLCgebGiebKgebKierGgerGjerKiebOkerKke7OmebSjerSgerSiebSkerSke7Sme7amfLKgfLOifbahfbaifrSgfrWifLakfLamfrWkfrWme7SofLSofbWqvLaofLeqvreqv/ijfbinf/ikfrimf/qmfbiqvriqv/qof/qqvrisv/muv/qsv/yutq6adq6bdq+adq+bd66ad66bd6+ad6+berKgerKherOgerOhe7Kge7Khe7Oge7OhfLSkfLSlfLWkfLWlfbSkfbSlfbWkfbWleK6YeK6ZeK+YeK+Zea6Yea+Yea+ZeLCceLCdeLGceLGdebCcebCdebGdeLCeeLCfeLGeeLGfebCfebGeebGferKeerKferOfe7Kee7Kfe7Oee7OffLSgfLShfLWgfLWhfbSgfbShfbWhfLSifLSjfLWifLWjfbSjfbWifbWjframfranfremfrenf/amf/emf/enfriofripfrmof/iof/ipf/mof/mpdqyWdqyXdq2Xd6yWd62Wd62XdKyadKybdK2adK2bdayada2adq6Ydq6Zd66Yd66Zd6+Yd6+Zdq6cdq6ddq+dd66cd66dd6+dfraifrajfrejf/aif/ajf/ejfLSmfLSnfLWmfLWnfbWmfbWnfrakfralfrelf/alf/ekf/elfraofrapfreofrepf/eof/epQAAAAAAACH5BAEAAAAALAAAAAAzADMABwj+AAEIHEiwoEF/CBMmNMiwocOGCiNKRPiwYsWJGCVa3DgQ45lIj/SxoyLiFSWMHC8qhDOMSwhevCLxY4eKRJh5WNgcOxMxJcOIj9jpoXPmGpdEkJRhIUcNF043zc584tbTp0CF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')
        self.black_general= PhotoImage(data='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')
        self.white_advisor = PhotoImage(data='R0lGODlhMwAzAIcAAQD/ALKJFLqRHL6RKLqZXcaRHMKRJMKRLMqVKMqZLMaZMMKZOMqdNMqdOM6hNM6hONKhMNKhONaqPNqlONqqOOKuOM6dRMKdUMahSM6hRM6lSMahUMqqUNKlSNKqQNKqSNqlQNqqQNqqSNKqUNKqWdquUN6yQNqySNayUNKyWdqyWdq6WcKhYcaqacqlYcqqYcquac6ucc6yZc6ycc62ec66fdKqYdKuadKyYda6bdqyYdqyadq6YdKycda6cdK6fdq2cdq6eeKySOKyUOK2WeK6UOK6Weq6UOq+XeK2ZeK6YeK6aeq+ZeK6cea+ed7CadrCcd7Cee7CWeLCYeLCaerCYerCae7KbeLCeebKdebKferCcerCeerKcerKee7SffLGbfLKYfLKbfLKcfLKefrOdfLSefrWef/afdK+gdbChdrCgdrGid7KieLCgeLGiebKgeLKierGgerKieLKkerOkebSjerSge7SiebSlebSmerSkerSme7amfLKgfLOifLSgfbaifrShfrSif/agfraifLSkfLSmfbakfrWkfrWmfrakerSoe7Wqu7epe7aqvLWofLWrvLaofLaqvraofreqvbesvretv/ihf/iif/ilfrimfbiofLiqvriof/qof/qqvbisvbiuvrmuv/qsv/quv/qwuLCceLCdeLGceLGdebCcebCdebGcebGderKgerKherOgerOhe7Kge7Khe7Oge7OhfLSifLSjfLWifLWjfbSifbSjfbWifbWjfLamfLanfLemfLenfbamfbanfbemfbenframfranfremfrenf/amf/anf/emf/enfriqvrirvrmqvrmrv/iqv/irv/mqv/mrvrisvritvrmsvrmtv/isv/itv/msv/mttqyUNqyVdq2Vd6yUN6yVd62UN62VdKyadKybdK2adayadaybda2ada2bdq6adq6bdq+bd66ad66bd6+ad6+bdq6cdq6ddq+cdq+dd66cd6+cd6+dc6qXc6uWc6uXQAAAAAAACH5BAEAAAAALAAAAAAzADMABwj+AAEIHEiwoEF/CBMmNMiwocOGCiNKRPiwYsWJGCVa3DgQ4xw8yowBO2TIVheMHC8qTIbHHSBYc4x5Mkan2Z8tVubgAhIxJcOIzyQt0rXu1p07yRANM4QLiz5bc+bg4NKkp0+B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')
        self.black_advisor = PhotoImage(data='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')

        # coordinates for creating rectangles in Canvas object
        top_left_coords = [delta, delta]
        bottom_right_coords = [self.square_size+delta, self.square_size+delta]
        for file in range(8):
            if file == 4:
                top_left_coords[1] += self.square_size
                bottom_right_coords[1] += self.square_size
            for col in range(8):
                self.chess_board.create_rectangle(top_left_coords[0], top_left_coords[1],
                                                  bottom_right_coords[0], bottom_right_coords[1])
                # increment x coordinates by 50 pixels (initial board dimensions divided by 8)
                top_left_coords[0] += self.square_size
                bottom_right_coords[0] += self.square_size
            # bring x coordinates back to initials, increment y coordinates
            top_left_coords[0] = delta
            top_left_coords[1] += self.square_size
            bottom_right_coords[0] = self.square_size+delta
            bottom_right_coords[1] += self.square_size

        # Put blackPieces on board
        # store create_image id's, use them with move method to move.
        for offset in range(0, board_length+self.square_size, self.square_size*2):
            file = offset // self.square_size
            self.ID_board[3][file] = self.chess_board.create_image(offset, self.square_size*3, anchor=NW, image=self.black_soldier)

            # store ID before its overwritten
        self.ID_board[0][0] = self.chess_board.create_image(0, 0, anchor=NW, image=self.black_chariot)
        self.ID_board[0][1] = self.chess_board.create_image(1 * self.square_size, 0, anchor=NW, image=self.black_horse)

        self.ID_board[0][2] = self.chess_board.create_image(2 * self.square_size, 0, anchor=NW, image=self.black_elephant)
        self.ID_board[0][3] = self.chess_board.create_image(3 * self.square_size, 0, anchor=NW, image=self.black_advisor)
        self.ID_board[0][4] = self.chess_board.create_image(4 * self.square_size, 0, anchor=NW, image=self.black_general)
        self.ID_board[0][5] = self.chess_board.create_image(5 * self.square_size, 0, anchor=NW, image=self.black_advisor)
        self.ID_board[0][6] = self.chess_board.create_image(6 * self.square_size, 0, anchor=NW, image=self.black_elephant)
        self.ID_board[0][7] = self.chess_board.create_image(7 * self.square_size, 0, anchor=NW, image=self.black_horse)
        self.ID_board[0][8] = self.chess_board.create_image(8 * self.square_size, 0, anchor=NW, image=self.black_chariot)
        self.ID_board[2][1] = self.chess_board.create_image(1 * self.square_size, 2 * self.square_size, anchor=NW, image=self.black_cannon)
        self.ID_board[2][7] = self.chess_board.create_image(7 * self.square_size, 2 * self.square_size, anchor=NW, image=self.black_cannon)

        # Put white pieces on board
        for offset in range(0, board_length+self.square_size, self.square_size*2):
            file = offset // self.square_size
            self.ID_board[6][file] = self.chess_board.create_image(offset, self.square_size*6, anchor=NW, image=self.white_soldier)

            # store ID before its overwritten
        self.ID_board[9][0] = self.chess_board.create_image(0, 9 * self.square_size, anchor=NW, image=self.white_chariot)
        self.ID_board[9][1] = self.chess_board.create_image(1 * self.square_size, 9 * self.square_size, anchor=NW, image=self.white_horse)
        self.ID_board[9][2] = self.chess_board.create_image(2 * self.square_size, 9 * self.square_size, anchor=NW, image=self.white_elephant)
        self.ID_board[9][3] = self.chess_board.create_image(3 * self.square_size, 9 * self.square_size, anchor=NW, image=self.white_advisor)
        self.ID_board[9][4] = self.chess_board.create_image(4 * self.square_size, 9 * self.square_size, anchor=NW, image=self.white_general)
        self.ID_board[9][5] = self.chess_board.create_image(5 * self.square_size, 9 * self.square_size, anchor=NW, image=self.white_advisor)
        self.ID_board[9][6] = self.chess_board.create_image(6 * self.square_size, 9 * self.square_size, anchor=NW, image=self.white_elephant)
        self.ID_board[9][7] = self.chess_board.create_image(7 * self.square_size, 9 * self.square_size, anchor=NW, image=self.white_horse)
        self.ID_board[9][8] = self.chess_board.create_image(8 * self.square_size, 9 * self.square_size, anchor=NW, image=self.white_chariot)
        self.ID_board[7][1] = self.chess_board.create_image(1 * self.square_size, 7 * self.square_size, anchor=NW, image=self.white_cannon)
        self.ID_board[7][7] = self.chess_board.create_image(7 * self.square_size, 7 * self.square_size, anchor=NW, image=self.white_cannon)

        # moving pieces
        self.selected_piece = None
        self.selected_square = None
        self.previous_color = None
        self.target_square = None
        self.target_piece = None


        # def click(event):
        #     #if self.chess_board.find_withtag(CURRENT):
        #         #print(CURRENT)
        #     piece = self.chess_board.find_withtag(CURRENT)
        #     #print(self.chess_board.coords(piece))
        #
        #     self.chess_board.move(piece, -self.square_size, -self.square_size)


            # if not self.selected_piece:
            #     closest = self.chess_board.find_overlapping(event.x+5, event.y+5, event.x+5, event.y+5)
            #     for objects in closest:
            #         print(self.chess_board.type(objects))
            #
            #         if self.chess_board.type(objects) == 'image':
            #             if not self.selected_piece:
            #                 self.selected_piece = objects
            #                 print('select_piece:', self.chess_board.coords(self.selected_piece))
            #         elif self.chess_board.type(objects) == 'rectangle':
            #             if not self.selected_square:
            #                 self.selected_square = objects
            #                 print('select_square:', self.chess_board.coords(self.selected_square))
            # else:
            #     print('else')
            #     closest = self.chess_board.find_overlapping(event.x+50, event.y+50, event.x+50, event.y+50)
            #     print(closest)
            #     for objects in closest:
            #         print(self.chess_board.type(objects))
            #         if self.chess_board.type(objects) == 'image':
            #             if not self.target_piece:
            #                 self.target_piece = objects
            #                 print('targ_piece:', self.chess_board.coords(self.target_piece))
            #         elif self.chess_board.type(objects) == 'rectangle':
            #             if not self.target_square:
            #                 self.target_square = objects
            #                 print('targ_square:', self.chess_board.coords(self.target_square))
            #     # define target destination
            #     if self.target_square:
            #         file_move = self.chess_board.coords(self.target_square)[0] - self.chess_board.coords(self.selected_piece)[0]
            #         col_move = self.chess_board.coords(self.target_square)[1] - self.chess_board.coords(self.selected_piece)[1]
            #
            #     # call is_valid_move
            #     # if valid, move piece. otherwise reset variables and colors and stuff
            #
            #         self.chess_board.move(self.selected_piece, file_move, col_move)
            #
            #
            #     self.selected_piece = None
            #     self.selected_square = None
            #     self.target_piece = None
            #     self.target_square = None


            # self.main.update()
            # self.chess_board.update()

        # self.chess_board.bind('<Button-1>', click)

        self.chess_board.pack()
        self.main.update()
        #self.main.mainloop()

    def move(self, frm, to):
        if self.game.make_move(frm, to):
            to_file = ord(to[0])-97
            frm_file = ord(frm[0])-97
            to_rank = 9 - (int(to[1:])-1)
            frm_rank = 9 - (int(frm[1:])-1)
            selected_piece = self.ID_board[frm_rank][frm_file]
            target_piece = self.ID_board[to_rank][to_file]
            x_move = to_file - frm_file
            y_move = to_rank - frm_rank
            self.chess_board.move(selected_piece, x_move*self.square_size, y_move*self.square_size)
            self.ID_board[to_rank][to_file] = self.ID_board[frm_rank][frm_file]
            self.ID_board[frm_rank][frm_file] = None
            if target_piece:
                self.chess_board.delete(target_piece)
            self.chess_board.update()
            self.main.update()
